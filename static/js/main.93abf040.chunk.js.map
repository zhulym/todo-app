{"version":3,"sources":["components/context.js","components/TodoList/TodoItem/index.jsx","components/TodoList/index.jsx","reduser.js","components/Todo/index.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["ContextTodo","React","createContext","TodoItem","props","useContext","dispatch","setTodoTitle","setIsEdited","setTitleBeforeEdit","className","id","type","checked","completed","onChange","title","point","date","class","onClick","TodoList","todos","map","item","i","state","action","Date","toLocaleDateString","hour","minute","second","edited","todo","titleBefore","length","deadLineTime","getTime","filter","Todo","useReducer","reduser","JSON","parse","localStorage","getItem","useState","todoTitle","isEdited","titleBeforeEdit","useEffect","setItem","stringify","checkDeadline","setInterval","deadlineElem","find","index","findIndex","splice","clearInterval","Provider","value","htmlFor","name","event","target","Button","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93abf040.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContextTodo = React.createContext();","import React, { useContext } from \"react\";\r\nimport { ContextTodo } from \"../../context\";\r\n//style\r\nimport \"./TodoItem.scss\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { dispatch, setTodoTitle, setIsEdited, setTitleBeforeEdit } =\r\n    useContext(ContextTodo);\r\n\r\n  return (\r\n    <div className=\"todo__item\">\r\n      <div className=\"item__wrap\">\r\n        <div>\r\n          <input\r\n            id={props.id}\r\n            className=\"item__checkbox\"\r\n            type=\"checkbox\"\r\n            checked={props.completed}\r\n            onChange={() =>\r\n              dispatch({\r\n                type: \"toggle\",\r\n                title: props.title,\r\n              })\r\n            }\r\n          />\r\n          <span\r\n            className={\r\n              props.completed || props.className ? \"item__completed\" : \"\"\r\n            }\r\n          >\r\n            {props.point}. {props.title}\r\n          </span>\r\n        </div>\r\n\r\n        <div>\r\n          <span className=\"creating-date\">{props.date}</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-primary\"\r\n            onClick={() => {\r\n              setTodoTitle(props.title);\r\n              setIsEdited(true);\r\n              setTitleBeforeEdit(props.title);\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-danger\"\r\n            onClick={() => {\r\n              dispatch({\r\n                type: \"remove\",\r\n                title: props.title,\r\n              });\r\n            }}\r\n          >\r\n            <i class=\"bi bi-trash-fill\"></i>Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem/index\";\r\n\r\nconst TodoList = (props) => {\r\n  return (\r\n    <div className=\"todo__list\">\r\n      <div className=\"list__container\">\r\n        {props.todos.map((item, i) => (\r\n          <TodoItem key={item.id} point={i + 1} {...item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state, action) {\r\n    const date = new Date().toLocaleDateString('ru-RU', { hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\r\n    switch (action.type) {\r\n        case 'add-edit':\r\n            if (action.edited) {\r\n                return state.map((todo) => {\r\n                    if (todo.title === action.titleBefore) {\r\n                        todo.title = action.title;\r\n                        todo.date = `Edited ${date}`\r\n                    }\r\n                    return todo;\r\n                })\r\n            }\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: state.length + 1,\r\n                    title: action.title,\r\n                    completed: false,\r\n                    date: date,\r\n                    deadLineTime: new Date().getTime(),\r\n                    className: ''\r\n                }\r\n            ]\r\n        case 'toggle':\r\n            return state.map((todo) => {\r\n                if (todo.title === action.title) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                }\r\n\r\n                return todo;\r\n            });\r\n        case 'remove':\r\n            return state.filter((todo) => todo.title !== action.title);\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { ContextTodo } from \"../context\";\r\nimport { Button } from \"reactstrap\";\r\nimport TodoList from \"../TodoList/index\";\r\nimport reduser from \"../../reduser\";\r\n//style\r\nimport \"./Todo.scss\";\r\n\r\n\r\nconst deadLine = 30000;\r\n\r\nconst Todo = () => {\r\n\r\n  const [state, dispatch] = useReducer(\r\n    reduser,\r\n    JSON.parse(localStorage.getItem(\"todos\")) || []\r\n  );\r\n  const [todoTitle, setTodoTitle] = useState(\"\");\r\n  const [isEdited, setIsEdited] = useState(false);\r\n  const [titleBeforeEdit, setTitleBeforeEdit] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    const checkDeadline = setInterval(() => {\r\n      if (state.length === 0) return;\r\n      const deadlineElem = state.find(\r\n        (item) =>\r\n          new Date().getTime() - item.deadLineTime >= deadLine && !item.completed && !item.className\r\n      );\r\n\r\n      if (deadlineElem) {\r\n        const index = state.findIndex(\r\n          (item) => item.title === deadlineElem.title\r\n        );\r\n\r\n        state.splice(index, 1, {\r\n          id: deadlineElem.id,\r\n          title: deadlineElem.title,\r\n          className: \"item__completed\",\r\n          date: deadlineElem.date,\r\n          deadLineTime: deadlineElem.deadLineTime,\r\n          completed: deadlineElem.completed,\r\n        });\r\n        localStorage.setItem(\"todos\", JSON.stringify(state));\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(checkDeadline);\r\n    }\r\n  }, [state]);\r\n\r\n  const addTodoItemOnClick = () => {\r\n    if (!todoTitle) return;\r\n    dispatch({\r\n      type: \"add-edit\",\r\n      title: todoTitle,\r\n      edited: isEdited,\r\n      titleBefore: titleBeforeEdit,\r\n    });\r\n    setTodoTitle(\"\");\r\n    setIsEdited(false);\r\n  };\r\n\r\n  return (\r\n    <ContextTodo.Provider\r\n      value={{ dispatch, setTodoTitle, setIsEdited, setTitleBeforeEdit }}\r\n    >\r\n      <div className=\"container\">\r\n        <h1>Todo App</h1>\r\n        <div className=\"input-field\">\r\n          <label className=\"input-label\" htmlFor=\"input-task\">\r\n            Next todo\r\n          </label>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"task\"\r\n            value={todoTitle}\r\n            onChange={(event) => {\r\n              setTodoTitle(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          className=\"input-button\"\r\n          color=\"success\"\r\n          onClick={addTodoItemOnClick}\r\n        >\r\n          {!isEdited ? \"Add new task\" : \"Edit task\"}\r\n        </Button>\r\n\r\n        <TodoList todos={state} />\r\n      </div>\r\n    </ContextTodo.Provider>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo/index\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-header\">\r\n      <Todo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}